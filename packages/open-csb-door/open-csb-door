#!/bin/sh
# Unlocks the specified Chalmers StudentbostÃ¤der entrance.

if test ! -t 0; then
	# Read from stdin
	IFS= read -r username && IFS= read -r password &&
		{ door_id=$1; [ "$door_id" ] || IFS= read -r door_id; }
else
	username=$(secret-tool lookup domain chalmersstudentbostader.se type username) \
		&& password=$(secret-tool lookup domain chalmersstudentbostader.se type password) \
		&& door_id=${1:-$(secret-tool lookup domain chalmersstudentbostader.se type door-id)}
fi || { >&2 echo 'Failed to read passwords'; exit 1; }

cookies=$(mktemp) || { >&2 echo 'Failed to create cookie-jar'; exit 1; }
trap 'rm -f -- "$cookies"' EXIT

# shellcheck disable=SC1083
redirect_url=$(curl --fail --no-progress-meter \
	--cookie "$cookies" --cookie-jar "$cookies" \
	--data "log=$username" --data "pwd=$password" \
	--location --output /dev/null --write-out %{url_effective} \
	https://www.chalmersstudentbostader.se/wp-login.php) ||
	{ >&2 echo 'Login to CSB failed'; exit 1; }
case $redirect_url in
	*'/login/?err=login') >&2 echo 'Invalid credentials'; exit 1 ;;
esac

# Returns the URL for authenticating to Aptus.
get_aptus_url() {
	resp=$(curl --fail --no-progress-meter \
				--cookie "$cookies" --cookie-jar "$cookies" \
				'https://www.chalmersstudentbostader.se/widgets/?callback=&widgets[]=aptuslogin@APTUSPORT') ||
		{ >&2 echo 'Could not fetch Aptus login URL'; return 1; }
	resp=${resp#'('}; resp=${resp%');'} # Remove surrounding "(...);"
	url=$(echo "$resp" |
			  jq --raw-output '.data."aptuslogin@APTUSPORT".objekt.[0].aptusUrl') ||
		{ >&2 echo 'Failed to parse Aptus login URL'; return 1; }
	echo "$url" | sed 's/ /%20/g'
}

# Authenticate to Aptus and request to open door
aptus_url=$(get_aptus_url) || exit $?

curl --fail --fail-early --no-progress-meter --location \
	 --cookie "$cookies" --cookie-jar "$cookies" \
	 --output /dev/null "$aptus_url" \
	 "https://apt-www.chalmersstudentbostader.se/AptusPortal/Lock/UnlockEntryDoor/$door_id" ||
	{ >&2 echo 'Failed to authenticate to Aptus and unlock entrance'; exit 1; }
